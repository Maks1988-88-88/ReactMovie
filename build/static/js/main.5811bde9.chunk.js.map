{"version":3,"sources":["serviceWorker.js","components/Header/index.jsx","posts.js","components/MovieCard/index.jsx","components/MovieCardCollection/index.jsx","components/MovieForm/index.jsx","components/AppBody/index.jsx","components/App/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","navNames","Header","navName","map","nav","react_default","a","createElement","className","key","v4","href","headerLogo","this","props","React","Component","posts","id","tittle","descr","rating","chipsList","MovieCard","_this$props","onClick","lists","MovieCardCollection","children","MovieForm","state","inputTitleValue","inputDescriptionValue","inputRatingValue","_handleInputChange","evt","value","target","name","_this","setState","Object","defineProperty","_handleSubmit","preventDefault","_this$state","onFormSubmit","_this$state2","ratingScore","onSubmit","type","onChange","rows","AppBody","post","toConsumableArray","onAddNewPost","newPost","console","log","concat","onDeleteCard","filter","currentPost","_this2","components_MovieCardCollection","components_MovieCard","components_MovieForm","App","components_Header","components_AppBody","root","document","querySelector","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5811bde9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nconst navNames = [\"Login\", \"Browse\", \"About\"];\r\n\r\nclass Header extends React.Component {\r\n  navName = navNames.map(nav => (\r\n    <li className=\"Navigation__item\" key={v4()}>\r\n      <a href=\"http://localhost:3000/\" className=\"Navigation__link\">\r\n        {nav}\r\n      </a>\r\n    </li>\r\n  ));\r\n  render() {\r\n    const { headerLogo } = this.props;\r\n\r\n    return (\r\n      <header className=\"Header\">\r\n        <h1 className=\"Header__logo\">{headerLogo}</h1>\r\n        <ul className=\"Navigation\">{this.navName}</ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  headerLogo: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import v4 from \"uuid/v4\";\r\n\r\nexport default [\r\n  {\r\n    id: v4(),\r\n    tittle: \"Star Wars\",\r\n    descr:\r\n      \"The Imperial Forces -- under orders from cruel Darth Vader (David Prowse) -- hold Princess Leia (Carrie Fisher) hostage, in their efforts to quell the rebellion against the Galactic Empire. Luke Skywalker (Mark Hamill) and Han Solo (Harrison Ford), c...\",\r\n    rating: \"7\",\r\n    chipsList: [\"sci-fi\", \"drama\", \"action\"]\r\n  },\r\n  {\r\n    id: v4(),\r\n    tittle: \"Jaws\",\r\n    descr:\r\n      \"When a young woman is killed by a shark while skinny-dipping near the New England tourist town of Amity Island, police chief Martin Brody (Roy Scheider) wants to close the beaches, but mayor Larry Vaughn (Murray Hamilton) overrules him, fearing that ...\",\r\n    rating: \"6\",\r\n    chipsList: [\"drama\", \"action\", \"horror\"]\r\n  },\r\n  {\r\n    id: v4(),\r\n    tittle: \"Conan\",\r\n    descr:\r\n      'Orphaned boy Conan (Arnold Schwarzenegger) is enslaved after his village is destroyed by the forces of vicious necromancer Thulsa Doom (James Earl Jones), and is compelled to push \"The Wheel of Pain\" for many years. Once he reaches adulthood, Conan s...',\r\n    rating: \"7\",\r\n    chipsList: [\"action\"]\r\n  },\r\n  {\r\n    id: v4(),\r\n    tittle: \"The House\",\r\n    descr:\r\n      \"Scott and Kate Johansen must figure out a way to earn some money after their daughter's scholarship falls through. When all else fails, the desperate couple join forces with their neighbor Frank to start an underground casino in his home. As the cash...\",\r\n    rating: \"5\",\r\n    chipsList: [\"comedy\"]\r\n  },\r\n  {\r\n    id: v4(),\r\n    tittle: \"Training Day\",\r\n    descr:\r\n      'Police drama about a veteran officer who escorts a rookie on his first day with the LAPD\\'s tough inner-city narcotics unit. \"Training Day\" is a blistering action drama that asks the audience to decide what is necessary, what is heroic and what crosse...',\r\n    rating: \"9\",\r\n    chipsList: [\"drama\", \"thriller\"]\r\n  }\r\n];","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MovieCard extends React.Component {\r\n  render() {\r\n    const { tittle, descr, rating, chipsList, onClick } = this.props;\r\n    return (\r\n      <div className=\"MovieCard\">\r\n        <button\r\n          className=\"MovieCard__btn MovieCard__btn--del\"\r\n          onClick={onClick}\r\n        >\r\n          delete\r\n        </button>\r\n        <div>\r\n          <h2 className=\"MovieInfo__title\">{tittle}</h2>\r\n          <p className=\"MovieInfo__descr\">{descr} </p>\r\n          <p className=\"MovieInfo__rating\">Rating:{rating}/10</p>\r\n          <ul className=\"ChipsList\">\r\n            {chipsList.map(lists => (\r\n              <li className=\"ChipsList__item\" key={v4()}>\r\n                {lists}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  tittle: PropTypes.string.isRequired,\r\n  descr: PropTypes.string.isRequired,\r\n  rating: PropTypes.string.isRequired,\r\n  chipsList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass MovieCardCollection extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div className=\"MovieList\">{children}</div>;\r\n  }\r\n}\r\n\r\nexport default MovieCardCollection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\n\r\nclass MovieForm extends React.Component {\r\n  static propTypes = {\r\n    onFormSubmit: PropTypes.func.isRequired\r\n  };\r\n  state = {\r\n    inputTitleValue: \"\",\r\n    inputDescriptionValue: \"\",\r\n    inputRatingValue: \"\"\r\n  };\r\n\r\n  _handleInputChange = evt => {\r\n    const value = evt.target.value;\r\n    const name = evt.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  _handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const {\r\n      inputTitleValue,\r\n      inputDescriptionValue,\r\n      inputRatingValue\r\n    } = this.state;\r\n    this.props.onFormSubmit(\r\n      inputTitleValue,\r\n      inputDescriptionValue,\r\n      inputRatingValue\r\n    );\r\n    this.setState({\r\n      inputTitleValue: \"\",\r\n      inputDescriptionValue: \"\",\r\n      inputRatingValue: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inputTitleValue,\r\n      inputDescriptionValue,\r\n      inputRatingValue\r\n    } = this.state;\r\n    const ratingScores = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"];\r\n    const ratingScore = ratingScores.map(rating => (\r\n      <option value={rating} key={v4()}>\r\n        {rating}\r\n      </option>\r\n    ));\r\n    return (\r\n      <form className=\"MovieForm\" onSubmit={this._handleSubmit}>\r\n        <label className=\"MovieForm__label\">\r\n          Title\r\n          <input\r\n            type=\"text\"\r\n            className=\"MovieForm__input\"\r\n            value={inputTitleValue}\r\n            name=\"inputTitleValue\"\r\n            onChange={this._handleInputChange}\r\n          />\r\n        </label>\r\n        <label className=\"MovieForm__label\">\r\n          Description\r\n          <textarea\r\n            className=\"MovieForm__txtarea\"\r\n            rows=\"8\"\r\n            type=\"text\"\r\n            value={inputDescriptionValue}\r\n            name=\"inputDescriptionValue\"\r\n            onChange={this._handleInputChange}\r\n          />\r\n        </label>\r\n        <label className=\"MovieForm__label\">\r\n          Rating\r\n          <select\r\n            className=\"MovieForm__input\"\r\n            value={inputRatingValue}\r\n            name=\"inputRatingValue\"\r\n            onChange={this._handleInputChange}\r\n          >\r\n            {ratingScore}\r\n          </select>\r\n        </label>\r\n        <button className=\"MovieForm__submit\" type=\"submit\">\r\n          submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport posts from \"../../posts\";\r\nimport \"./style.css\";\r\nimport MovieCard from \"../MovieCard\";\r\nimport MovieCardCollection from \"../MovieCardCollection\";\r\nimport MovieForm from \"../MovieForm\";\r\n\r\nclass AppBody extends React.Component {\r\n  state = {\r\n    post: [...posts]\r\n  };\r\n\r\n  onAddNewPost = (tittle, descr, rating) => {\r\n    const newPost = {\r\n      id: v4(),\r\n      chipsList: [],\r\n      descr: descr,\r\n      rating: rating,\r\n      tittle: tittle\r\n    };\r\n    console.log(newPost);\r\n    this.setState({\r\n      post: [...this.state.post, newPost]\r\n    });\r\n  };\r\n\r\n  onDeleteCard = id => {\r\n    console.log(id);\r\n    this.setState({\r\n      post: this.state.post.filter(currentPost => currentPost.id !== id)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    return (\r\n      <div className=\"App__body\">\r\n        <MovieCardCollection>\r\n          {post.map(post => (\r\n            <MovieCard\r\n              tittle={post.tittle}\r\n              descr={post.descr}\r\n              rating={post.rating}\r\n              chipsList={post.chipsList}\r\n              key={post.id}\r\n              onClick={() => {\r\n                this.onDeleteCard(post.id);\r\n              }}\r\n            />\r\n          ))}\r\n        </MovieCardCollection>\r\n        <MovieForm onFormSubmit={this.onAddNewPost} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBody;\r\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\nimport Header from \"../Header/index\";\r\nimport AppBody from \"../AppBody/index\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div className=\"App\" id={v4()}>\r\n        <Header headerLogo=\"Movie Mate\" />\r\n        <AppBody />\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n import App from './components/App/index'\n \nconst root = document.querySelector('#root');\n\nReactDOM.render( < App / > , root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}